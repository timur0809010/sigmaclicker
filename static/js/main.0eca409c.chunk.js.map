{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","japidorCoins","setJapidorCoins","useState","useEffect","interval","setInterval","prevCoins","newCoins","saveProgress","clearInterval","coins","fetch","method","headers","body","JSON","stringify","_jsxs","className","children","_jsx","src","alt","onClick","boostMining","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"qNAgDeA,MA7Cf,WACE,MAAOC,EAAcC,GAAmBC,mBAAS,GAEjDC,qBAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BJ,GAAiBK,IACf,MAAMC,EAAWD,EAAY,GAE7B,OADAE,EAAaD,GACNA,CAAQ,GACf,GACD,KAEH,MAAO,IAAME,cAAcL,EAAS,GACnC,IAEH,MAAMI,EAAgBE,IACpBC,MAAM,oBAAqB,CACzBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEhB,aAAcU,KACrC,EAWJ,OACEO,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,MAAAD,SAAI,sBACJC,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,OAAKC,IAAI,oBAAoBC,IAAI,0BAA0BJ,UAAU,gBAEvED,eAAA,OAAKC,UAAU,QAAOC,SAAA,CAAC,eAAanB,KACpCoB,cAAA,UAAQF,UAAU,eAAeK,QAfjBC,KAClBvB,GAAiBK,IACf,MAAMC,EAAWD,EAAY,IAE7B,OADAE,EAAaD,GACNA,CAAQ,GACf,EAUsDY,SAAC,6BAK7D,EClCeM,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EAAY,GAExB,ECHWS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnB,cAACoB,IAAMC,WAAU,CAAAtB,SACfC,cAACrB,EAAG,OAOR0B,G","file":"static/js/main.0eca409c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [japidorCoins, setJapidorCoins] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setJapidorCoins((prevCoins) => {\n        const newCoins = prevCoins + 10;\n        saveProgress(newCoins);\n        return newCoins;\n      });\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const saveProgress = (coins) => {\n    fetch(\"/api/saveProgress\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ japidorCoins: coins }),\n    });\n  };\n\n  const boostMining = () => {\n    setJapidorCoins((prevCoins) => {\n      const newCoins = prevCoins + 100;\n      saveProgress(newCoins);\n      return newCoins;\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>JapidorCoin Miner</h1>\n      <div className=\"gif-container\">\n        <img src=\"/assets/miner.gif\" alt=\"Spiral Mining Processor\" className=\"miner-gif\" />\n      </div>\n      <div className=\"coins\">Your Coins: {japidorCoins}</div>\n      <button className=\"boost-button\" onClick={boostMining}>\n        Boost Mining (+100 JC)\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}